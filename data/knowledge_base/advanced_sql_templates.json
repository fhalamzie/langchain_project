{
  "advanced_templates": {
    "multi_entity_portfolio.sql": "\n                WITH owner_portfolio AS (\n                    SELECT e.*, o.ONR, o.OBEZ, o.OSTRASSE, o.OPLZORT\n                    FROM EIGADR e\n                    LEFT JOIN EIGENTUEMER et ON e.EIGNR = et.KNR
                    LEFT JOIN OBJEKTE o ON et.ONR = o.ONR\n                    WHERE UPPER(e.ENAME) LIKE UPPER('%{entity1}%')\n                ),\n                tenant_details AS (\n                    SELECT b.*, w.ENR, w.EFLAECHE, op.ONR, op.OBEZ\n                    FROM BEWADR b\n                    JOIN BEWOHNER bw ON b.BEWNR = bw.BEWNR  \n                    JOIN WOHNUNG w ON bw.ENR = w.ENR\n                    JOIN owner_portfolio op ON w.ONR = op.ONR\n                ),\n                financial_summary AS (\n                    SELECT \n                        k.ONR,\n                        SUM(CASE WHEN k.KKLASSE = 'MIETE' THEN k.KBRUTTO ELSE 0 END) as total_rent,\n                        SUM(CASE WHEN k.KKLASSE = 'NK' THEN k.KBRUTTO ELSE 0 END) as total_operating_costs,\n                        COUNT(DISTINCT td.BEWNR) as tenant_count\n                    FROM KONTEN k\n                    JOIN owner_portfolio op ON k.ONR = op.ONR\n                    LEFT JOIN tenant_details td ON k.ONR = td.ONR\n                    GROUP BY k.ONR\n                )\n                SELECT \n                    op.*,\n                    td.BNAME, td.BVNAME, td.BSTR, td.BPLZORT,\n                    fs.total_rent, fs.total_operating_costs, fs.tenant_count,\n                    w.EFLAECHE, w.ETYP\n                FROM owner_portfolio op\n                LEFT JOIN tenant_details td ON op.ONR = td.ONR\n                LEFT JOIN financial_summary fs ON op.ONR = fs.ONR\n                LEFT JOIN WOHNUNG w ON op.ONR = w.ONR\n                ORDER BY op.ENAME, op.OBEZ, td.BNAME\n            ",
    "temporal_kpi_analysis.sql": "\n                WITH monthly_metrics AS (\n                    SELECT \n                        DATE_FORMAT(b.DATUM, '%Y-%m') as month_year,\n                        k.ONR,\n                        SUM(CASE WHEN k.KKLASSE = 'MIETE' THEN b.BETRAG ELSE 0 END) as monthly_rent,\n                        SUM(CASE WHEN k.KKLASSE = 'NK' THEN b.BETRAG ELSE 0 END) as monthly_costs,\n                        COUNT(DISTINCT b.BNR) as transaction_count\n                    FROM BUCHUNG b\n                    JOIN KONTEN k ON b.KNR = k.KNR\n                    WHERE b.DATUM >= DATE_SUB(CURRENT_DATE, INTERVAL {timeframe} MONTH)\n                    GROUP BY DATE_FORMAT(b.DATUM, '%Y-%m'), k.ONR\n                ),\n                trend_analysis AS (\n                    SELECT \n                        mm.*,\n                        LAG(mm.monthly_rent) OVER (PARTITION BY mm.ONR ORDER BY mm.month_year) as prev_rent,\n                        LAG(mm.monthly_costs) OVER (PARTITION BY mm.ONR ORDER BY mm.month_year) as prev_costs\n                    FROM monthly_metrics mm\n                ),\n                owner_objects AS (\n                    SELECT o.ONR, o.OBEZ, e.ENAME\n                    FROM OBJEKTE o\n                    LEFT JOIN EIGENTUEMER et ON o.ONR = et.ONR
                    LEFT JOIN EIGADR e ON et.KNR = e.EIGNR\n                    WHERE UPPER(e.ENAME) LIKE UPPER('%{entity}%')\n                )\n                SELECT \n                    ta.*,\n                    oo.OBEZ, oo.ENAME,\n                    ROUND((ta.monthly_rent - ta.prev_rent) / ta.prev_rent * 100, 2) as rent_change_percent,\n                    ROUND((ta.monthly_costs - ta.prev_costs) / ta.prev_costs * 100, 2) as cost_change_percent\n                FROM trend_analysis ta\n                JOIN owner_objects oo ON ta.ONR = oo.ONR\n                WHERE ta.prev_rent IS NOT NULL\n                ORDER BY ta.month_year DESC, oo.ENAME, oo.OBEZ\n            ",
    "compliance_analysis.sql": "\n                WITH compliance_checks AS (\n                    SELECT \n                        o.ONR, o.OBEZ, e.ENAME,\n                        CASE \n                            WHEN '{compliance_type}' = 'MIETPREISBREMSE' THEN\n                                CASE WHEN bw.Z1 <= (markt.MARKTMIETE * 1.1) THEN 'KONFORM' ELSE 'VERLETZUNG' END\n                            WHEN '{compliance_type}' = 'BETRKV' THEN  \n                                CASE WHEN k.KKLASSE IN ('NK', 'HEIZUNG', 'WASSER') THEN 'KONFORM' ELSE 'PRÜFUNG' END\n                            WHEN '{compliance_type}' = 'WEG_BESCHLUSSFÄHIGKEIT' THEN\n                                CASE WHEN weg.STIMMENVERHÄLTNIS >= 0.5 THEN 'BESCHLUSSFÄHIG' ELSE 'NICHT_BESCHLUSSFÄHIG' END\n                            ELSE 'UNBEKANNT'\n                        END as compliance_status,\n                        bw.Z1 as current_rent,\n                        markt.MARKTMIETE as market_rent,\n                        k.KKLASSE as cost_category\n                    FROM OBJEKTE o\n                    LEFT JOIN EIGENTUEMER et ON o.ONR = et.ONR
                    LEFT JOIN EIGADR e ON et.KNR = e.EIGNR\n                    LEFT JOIN WOHNUNG w ON o.ONR = w.ONR\n                    LEFT JOIN BEWOHNER bw ON w.ENR = bw.ENR\n                    LEFT JOIN KONTEN k ON o.ONR = k.ONR\n                    LEFT JOIN (\n                        SELECT ONR, AVG(MARKTMIETE_PRO_QM * WOHNFLÄCHE) as MARKTMIETE\n                        FROM MARKTDATEN \n                        GROUP BY ONR\n                    ) markt ON o.ONR = markt.ONR\n                    LEFT JOIN (\n                        SELECT ONR, \n                               SUM(STIMMANTEILE_ANWESEND) / SUM(STIMMANTEILE_GESAMT) as STIMMENVERHÄLTNIS\n                        FROM WEG_VERSAMMLUNGEN\n                        GROUP BY ONR\n                    ) weg ON o.ONR = weg.ONR\n                    WHERE UPPER(e.ENAME) LIKE UPPER('%{entity}%')\n                ),\n                violation_summary AS (\n                    SELECT \n                        ONR, OBEZ, ENAME,\n                        COUNT(*) as total_checks,\n                        SUM(CASE WHEN compliance_status LIKE '%VERLETZUNG%' OR compliance_status LIKE '%NICHT_%' THEN 1 ELSE 0 END) as violations,\n                        GROUP_CONCAT(DISTINCT compliance_status) as status_summary\n                    FROM compliance_checks\n                    GROUP BY ONR, OBEZ, ENAME\n                )\n                SELECT \n                    vs.*,\n                    ROUND(vs.violations * 100.0 / vs.total_checks, 2) as violation_percentage,\n                    CASE \n                        WHEN vs.violations = 0 THEN 'VOLLSTÄNDIG_KONFORM'\n                        WHEN vs.violations <= vs.total_checks * 0.1 THEN 'GERINGFÜGIGE_MÄNGEL'\n                        ELSE 'ERHEBLICHE_MÄNGEL'\n                    END as overall_compliance\n                FROM violation_summary vs\n                ORDER BY vs.violation_percentage DESC, vs.ENAME\n            "
  }
}