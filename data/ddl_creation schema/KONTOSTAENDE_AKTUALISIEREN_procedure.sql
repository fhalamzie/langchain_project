-- Prozedur: KONTOSTAENDE_AKTUALISIEREN
-- Generiert: 2025-05-31 10:26:42

CREATE OR ALTER PROCEDURE KONTOSTAENDE_AKTUALISIEREN
DECLARE VARIABLE INR INTEGER;
DECLARE VARIABLE IONR INTEGER;
DECLARE VARIABLE IONRVON INTEGER;
DECLARE VARIABLE IONRBIS INTEGER;
DECLARE VARIABLE SUMSOLL NUMERIC(15, 2);
DECLARE VARIABLE SUMHABEN NUMERIC(15, 2);
DECLARE VARIABLE KSTAND NUMERIC(15, 2);
DECLARE VARIABLE IKNR INTEGER;
DECLARE VARIABLE IKKLASSE INTEGER;
DECLARE VARIABLE DVON DATE;
DECLARE VARIABLE DBIS DATE;
DECLARE VARIABLE NTMP1 NUMERIC(15, 2);
DECLARE VARIABLE NTMP2 NUMERIC(15, 2);
BEGIN
 /* ONR setzen */
 IF (IONR2 = -1) THEN
  BEGIN
   IONRVON = 0;
   IONRBIS = 999; 
  END
 ELSE
  BEGIN
   IONRVON = IONR2;
   IONRBIS = IONR2;  
  END

 /* Kontostand aktualisieren */
 FOR
  SELECT ONR, KNR, KKLASSE, KBRUTTO, KBRUTTOWJ FROM KONTEN WHERE ONR>=:IONRVON AND ONR<=:IONRBIS and KKLASSE>19
 INTO :IONR, :IKNR, :IKKLASSE, :NTMP1, :NTMP2
 DO
  begin  
   Select Sum(Betrag) from buchung where ONRSOLL=:IONR and KSOLL=:IKNR INTO :SUMSOLL;
   Select Sum(Betrag) from buchung where ONRHABEN=:IONR and KHABEN=:IKNR INTO :SUMHABEN;
   IF (SUMSOLL IS NULL) then SUMSOLL=0;
   IF (SUMHABEN IS NULL) then SUMHABEN=0;
   IF (NTMP1 IS NULL) then NTMP1=0;
   IF (NTMP2 IS NULL) then NTMP2=0;    
   IF (IKKLASSE=27 OR IKKLASSE=71 OR (IKKLASSE>=10 and IKKLASSE<=19)) THEN
    KSTAND=SUMHABEN-SUMSOLL;
   ELSE
    KSTAND=SUMSOLL-SUMHABEN;
   /* */
   IF ((KSTAND <> NTMP1) OR (KSTAND <> NTMP2)) THEN
    Update konten set KBrutto=:KSTAND, KBRUTTOWJ=:KSTAND where ONR=:IONR and KNR=:IKNR;
  end 
   
 /* Kontostand WS aktualisieren -> Sachkonten  BK-Zeitraum*/
 For
  SELECT KONTEN.ONR, KNR, KKLASSE, BKVON, BKBIS, KBRUTTOWJ FROM KONTEN, OBJEKTE where KONTEN.ONR=OBJEKTE.ONR AND KKLASSE<=19 AND KKSTNR<>2 AND (KONTEN.ONR>=:IONRVON AND KONTEN.ONR<=:IONRBIS) ORDER BY ONR, KNR
 INTO :IONR, :IKNR, :IKKLASSE, :DVON, :DBIS, :NTMP1
 do
  begin
   Select Sum(Betrag) from buchung where ONRSOLL=:IONR and KSOLL=:IKNR and (Datum>=:DVON and Datum<=:DBIS) INTO SUMSOLL;
   Select Sum(Betrag) from buchung where ONRHABEN=:IONR and KHABEN=:IKNR and (Datum>=:DVON and Datum<=:DBIS) INTO SUMHABEN;
   IF (SUMSOLL IS NULL) then SUMSOLL=0;
   IF (SUMHABEN IS NULL) then SUMHABEN=0;
   IF (NTMP1 IS NULL) then NTMP1=0;
   IF (IKKLASSE=27 OR IKKLASSE=71 OR (IKKLASSE>=10 and IKKLASSE<=19)) THEN
    KSTAND=SUMHABEN-SUMSOLL;
   ELSE
    KSTAND=SUMSOLL-SUMHABEN;
   /* */
   IF (KSTAND <> NTMP1) THEN   
    Update konten set KBruttoWJ=:KSTAND where ONR=:IONR and KNR=:IKNR;
  end
  
 /* Kontostand WS aktualisieren -> Sachkonten  HK-Zeitraum*/
 For
  SELECT KONTEN.ONR, KNR, KKLASSE, HKVON, HKBIS, KBRUTTOWJ FROM KONTEN, OBJEKTE where KONTEN.ONR=OBJEKTE.ONR AND KKLASSE<=19 AND KKSTNR=2 AND (KONTEN.ONR>=:IONRVON AND KONTEN.ONR<=:IONRBIS) ORDER BY ONR, KNR
 INTO :IONR, :IKNR, :IKKLASSE, :DVON, :DBIS, :NTMP1
 do
  begin
   Select Sum(Betrag) from buchung where ONRSOLL=:IONR and KSOLL=:IKNR and (Datum>=:DVON and Datum<=:DBIS) INTO SUMSOLL;
   Select Sum(Betrag) from buchung where ONRHABEN=:IONR and KHABEN=:IKNR and (Datum>=:DVON and Datum<=:DBIS) INTO SUMHABEN;
   IF (SUMSOLL IS NULL) then SUMSOLL=0;
   IF (SUMHABEN IS NULL) then SUMHABEN=0;
   IF (NTMP1 IS NULL) then NTMP1=0;
   IF (IKKLASSE=27 OR IKKLASSE=71 OR (IKKLASSE>=10 and IKKLASSE<=19)) THEN
    KSTAND=SUMHABEN-SUMSOLL;
   ELSE
    KSTAND=SUMSOLL-SUMHABEN;
   /* */
   IF (KSTAND <> NTMP1) THEN   
    Update konten set KBruttoWJ=:KSTAND where ONR=:IONR and KNR=:IKNR;
  end
  
 /* BANKEN */
 for 
  select sum(kbrutto), banknr from konten, banken where banknr is not null and nr=banknr group by banknr, kstand having sum(kbrutto)<>kstand
 into :KSTAND, :IKNR
 do
  begin
   update banken set KSTAND=:KSTAND where NR=:IKNR;
  end 
END
