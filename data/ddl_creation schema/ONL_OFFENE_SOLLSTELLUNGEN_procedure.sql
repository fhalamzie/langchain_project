-- Prozedur: ONL_OFFENE_SOLLSTELLUNGEN
-- Generiert: 2025-05-31 10:26:42

CREATE OR ALTER PROCEDURE ONL_OFFENE_SOLLSTELLUNGEN
DECLARE VARIABLE SUMMEOP NUMERIC(15, 2);
DECLARE VARIABLE ONRSOLL INTEGER;
DECLARE VARIABLE ONRHABEN INTEGER;
DECLARE VARIABLE KSTRSOLL VARCHAR(15);
DECLARE VARIABLE KSTRHABEN VARCHAR(15);
DECLARE VARIABLE WHGBEZ VARCHAR(25);
DECLARE VARIABLE SNAME VARCHAR(30);
DECLARE VARIABLE SVNAME VARCHAR(30);
DECLARE VARIABLE SOBEZ VARCHAR(100);
DECLARE VARIABLE ISPOSITIV CHAR(1);
DECLARE VARIABLE OPKONTOSTR VARCHAR(104);
DECLARE VARIABLE LFDBANKNR INTEGER;
DECLARE VARIABLE IBANKNR2 INTEGER;
DECLARE VARIABLE IBANKNR3 INTEGER;
DECLARE VARIABLE IBANKNR4 INTEGER;
DECLARE VARIABLE IBANKNR5 INTEGER;
DECLARE VARIABLE TMPTEXT VARCHAR(80);
BEGIN
 if (ISTATUS=1) then  /* DIREKT */
  BEGIN
   for select BNR, LBNR , SPLITNR, ONR, KNR, KKLASSE, KNRSTR, DATUM,
    TEXT, MWST, OPGESBETRAG, OPBETRAG, OPRESTBETRAG,
    LASTERZEUGT, ISDEBITOR, SUMMEOP, BEMERKUNG, ARTOP, KNROP, GN
   from OFFENE_SOLLSTELLUNGEN_DIREKT (:IBNR)
   INTO BNR, LBNR , SPLITNR, ONR, KNR, KKLASSE, KNRSTR, DATUM,
    TMPTEXT, MWST, OPGESBETRAG, OPBETRAG, OPRESTBETRAG,
    LASTERZEUGT, ISDEBITOR, SUMMEOP, BEMERKUNG, ARTOP, KNROP, GN
    DO
     BEGIN
      IF (ISDEBITOR=1) THEN
       KHABEN=KNROP;
      ELSE
       KSOLL=KNROP;
      EXECUTE PROCEDURE GET_SOLLSTBEZ(ONR, KNR, ISDEBITOR) RETURNING_VALUES BEZ;
      TEXT=TMPTEXT;
      IF (LBNR IS NULL) THEN
       SUSPEND;
     END
  END  /* DIREKT */
 ELSE
 if (ISTATUS=222) then  /* SLEV OP, mehrere */
  BEGIN
   FOR SELECT
   Datum, Betrag, TEXT, LBNR, ONR  from slevbuch
   where (OPBetrag >= :RBETRAG-0.01 and OPBetrag<=:RBETRAG+0.01)
   AND BANKNR=:BANKNR
   INTO :DATUM, :OPBETRAG, TMPTEXT, :LBNR, :ONR
   DO
    BEGIN
     LASTERZEUGT=1;
     ISDEBITOR=1;
     OPRESTBETRAG=0;
     OPGESBETRAG=OPBETRAG;
     OPRESTBETRAG=OPGESBETRAG-OPBETRAG;
     BEZ='Sammel-Lastschriftseinzug (DTA)';
     IF (ONR IS NULL or ONR=0) then
      ONR=NULL;
     KNR=NULL;
     KNRSTR=NULL;
     KKLASSE=NULL;
     TEXT=TMPTEXT;
     SUSPEND;
    END
  END /* SLEV OP mehrere */
 else
 if (ISTATUS=2) then  /* SLEV OP, eine */
  BEGIN
   FOR SELECT
   Datum, Betrag, TEXT, LBNR, ONR  from slevbuch
   where LBNR=:IBNR
   INTO :DATUM, :OPBETRAG, TMPTEXT, :LBNR, :ONR
   DO
    BEGIN
     LASTERZEUGT=1;
     ISDEBITOR=1;
     OPRESTBETRAG=0;
     OPGESBETRAG=OPBETRAG;
     OPRESTBETRAG=OPGESBETRAG-OPBETRAG;
     BEZ='Sammel-Lastschriftseinzug (DTA)';
     IF (ONR IS NULL or ONR=0) then
      ONR=NULL;
     KNR=NULL;
     KNRSTR=NULL;
     KKLASSE=NULL;
     TEXT=TMPTEXT;
     SUSPEND;
    END
  END /* SLEV eine */
 ELSE
  BEGIN
   /* BA2 bis BA5 setzen */
   IF (ISTATUS=3) THEN
    FOR select onr from objekte where (levbanknr=:BANKNR or levbanknr2=:BANKNR)
    into :IONR do
   IBANKNR2=NULL;
   IBANKNR3=NULL;
   IBANKNR4=NULL;
   IBANKNR5=NULL;
   for select banknr from objbanken where ONR=:IONR
   into :LFDBANKNR do
    begin
     IF (LFDBANKNR<>BANKNR) THEN
      BEGIN
       IF (IBANKNR2 IS NULL) THEN
        IBANKNR2=LFDBANKNR;
       ELSE
        IF (IBANKNR3 IS NULL) THEN
         IBANKNR3=LFDBANKNR;
        ELSE
         IF (IBANKNR4 IS NULL) THEN
          IBANKNR4=LFDBANKNR;
        ELSE
         IF (IBANKNR5 IS NULL) THEN
          IBANKNR5=LFDBANKNR;
      END
    end
   IF (:ISTATUS=3) THEN /*mehrere Eigentuemer = Alle OP der EigentÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¼mer fÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¼r Bank*/
    BEGIN
     /* ONR des Eigentuemers feststellen */
     for select onr, knr from eigentuemer
     where eignr=:eignr and onr in (select onr from objbanken where banknr=:BANKNR)
     INTO :IONR, :IKNR
     DO
      BEGIN
       IF (SOLL_HABEN='H') THEN
        ISPOSITIV='J';
       ELSE
        ISPOSITIV='N';
       for
       select BNR, LBNR, SPLITNR, ONR, KNR, KKLASSE, KNRSTR, DATUM, TEXT, MWST, OPGESBETRAG, OPBETRAG, OPRESTBETRAG,
              LASTERZEUGT, ISDEBITOR, SUMMEOP, BEMERKUNG, OPKONTO, ARTOP, KNROP, GN
       from OFFENE_SOLLSTELLUNGEN_KONTO (:IONR, :IKNR, :ISPOSITIV, -1, 'N')
       INTO :BNR, :LBNR, :SPLITNR, :ONR, :KNR, :KKLASSE,:KNRSTR, :DATUM, TMPTEXT, :MWST, :OPGESBETRAG, :OPBETRAG, :OPRESTBETRAG,
            :LASTERZEUGT, :ISDEBITOR, :SUMMEOP, :BEMERKUNG, :OPKONTOSTR, :ARTOP, :KNROP, :GN
       DO
        IF (LBNR IS NULL) THEN
         BEGIN
          EXECUTE PROCEDURE GET_SOLLSTBEZ(ONR, KNR, ISDEBITOR) RETURNING_VALUES BEZ;
          KHABEN=KNROP;
          TEXT=TMPTEXT;
          SUSPEND;
         END
      END
    END
   ELSE
    BEGIN /* Offene Sollstellungen Konto */
     IF (SOLL_HABEN='H') THEN
      ISPOSITIV='J';
     ELSE
      ISPOSITIV='N';
     for
     select BNR, LBNR, SPLITNR, ONR, KNR, KKLASSE, KNRSTR, DATUM, TEXT, MWST, OPGESBETRAG, OPBETRAG, OPRESTBETRAG,
          LASTERZEUGT, ISDEBITOR, SUMMEOP, BEMERKUNG, OPKONTO, ARTOP, KNROP, GN
     from OFFENE_SOLLSTELLUNGEN_KONTO (:IONR, :IKNR, :ISPOSITIV, :BANKNR, 'N')
     INTO :BNR, :LBNR, :SPLITNR, :ONR, :KNR, :KKLASSE,:KNRSTR, :DATUM, TMPTEXT, :MWST, :OPGESBETRAG, :OPBETRAG, :OPRESTBETRAG,
          :LASTERZEUGT, :ISDEBITOR, :SUMMEOP, :BEMERKUNG, :OPKONTOSTR, :ARTOP, :KNROP, :GN
     DO
      IF (LBNR IS NULL) THEN
       BEGIN
        IF (ISDEBITOR=1) THEN
         KHABEN=KNROP;
        ELSE
         KSOLL=KNROP;
        EXECUTE PROCEDURE GET_SOLLSTBEZ(ONR, KNR, ISDEBITOR) RETURNING_VALUES BEZ;
        TEXT=TMPTEXT;
        SUSPEND;
       END
    END
  END
END
